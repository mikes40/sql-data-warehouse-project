-- --------------------------------------------------
-- GOLD LAYER: Fact Table – Sales
-- --------------------------------------------------
-- Goal:
-- Create a fact table to store sales transactions.
-- This includes transaction dates and measures like sales amount,
-- quantity sold, and price, as well as foreign keys to dimension tables.
--
-- Fact tables typically:
-- - Contain measurable, quantitative data (sales, quantity, etc.)
-- - Include foreign keys referencing dimension tables
-- - Are used to analyze business processes (e.g. sales pipeline)
-- --------------------------------------------------


-- STEP 1: Base Sales Data Extract
-- Source: silver.crm_sales_details
-- Contains transactional sales data with foreign keys to customer/product
SELECT 
    sls_ord_num,
    prd_key,
    cust_id,
    sls_order_dt,
    sls_ship_dt,
    sls_due_dt,
    sls_sales,
    sls_quantity,
    sls_price
FROM silver.crm_sales_details;


-- STEP 2: Join with Dimension Tables to Add Surrogate Keys
-- Replace natural keys (prd_key, cust_id) with surrogate keys from gold layer
SELECT 
    sls_ord_num,
    pr.product_key,
    cs.customer_key,
    sls_order_dt,
    sls_ship_dt,
    sls_due_dt,
    sls_sales,
    sls_quantity,
    sls_price
FROM silver.crm_sales_details sd
LEFT JOIN gold.dim_products pr ON sd.sls_prd_key = pr.product_number
LEFT JOIN gold.dim_customers cs ON sd.sls_cust_id = cs.customer_id;


-- STEP 3: Friendly Column Names & Final Structure
-- Organize fields as: keys → dates → measures
SELECT 
    sls_ord_num        AS order_number,
    pr.product_key     AS product_key,
    cs.customer_key    AS customer_key,
    sls_order_dt       AS order_date,
    sls_ship_dt        AS shipping_date,
    sls_due_dt         AS due_date,
    sls_sales          AS sales,
    sls_quantity       AS quantity,
    sls_price          AS price
FROM silver.crm_sales_details sd
LEFT JOIN gold.dim_products pr ON sd.sls_prd_key = pr.product_number
LEFT JOIN gold.dim_customers cs ON sd.sls_cust_id = cs.customer_id;


-- STEP 4: Create Gold View
-- Final Fact View for Sales
CREATE VIEW gold.fact_sales AS
SELECT 
    sls_ord_num        AS order_number,
    pr.product_key     AS product_key,
    cs.customer_key    AS customer_key,
    sls_order_dt       AS order_date,
    sls_ship_dt        AS shipping_date,
    sls_due_dt         AS due_date,
    sls_sales          AS sales,
    sls_quantity       AS quantity,
    sls_price          AS price
FROM silver.crm_sales_details sd
LEFT JOIN gold.dim_products pr ON sd.sls_prd_key = pr.product_number
LEFT JOIN gold.dim_customers cs ON sd.sls_cust_id = cs.customer_id;


-- STEP 5: Sanity Check - Preview Fact Table
SELECT * FROM gold.fact_sales;


-- STEP 6: Validation - Test Dimension Joins

-- Test: Join with Customer Dimension
SELECT * 
FROM gold.fact_sales s
LEFT JOIN gold.dim_customers c ON s.customer_key = c.customer_key;

-- Null Customer Key Check
SELECT * 
FROM gold.fact_sales s
LEFT JOIN gold.dim_customers c ON s.customer_key = c.customer_key
WHERE s.customer_key IS NULL;

-- Null Match in Customer Dimension
SELECT * 
FROM gold.fact_sales s
LEFT JOIN gold.dim_customers c ON s.customer_key = c.customer_key
WHERE c.customer_key IS NULL;


-- Test: Join with Product Dimension
SELECT * 
FROM gold.fact_sales s
LEFT JOIN gold.dim_products p ON s.product_key = p.product_key;

-- Null Match in Product Dimension
SELECT * 
FROM gold.fact_sales s
LEFT JOIN gold.dim_products p ON s.product_key = p.product_key
WHERE p.product_key IS NULL;
